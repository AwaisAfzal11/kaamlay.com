This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/workflows/deploy.yml
.gitignore
package.json
public/Assets/Readme
public/index.html
src/App.js
src/Assets/logo.webp
src/Assets/logo02.webp
src/Assets/readme
src/Components/Footer.jsx
src/Components/Navbar.jsx
src/index.css
src/index.js
src/Pages/ContactPage.jsx
src/Pages/Home.jsx
src/Pages/Home/Home.jsx
tailwind.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
</file>

<file path="package.json">
{
  "name": "react-app-starter",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@headlessui/react": "^2.1.2",
    "@heroicons/react": "^2.1.5",
    "@testing-library/jest-dom": "^6.4.8",
    "@testing-library/react": "^16.0.0",
    "@testing-library/user-event": "^14.5.2",
    "aos": "^2.3.4",
    "axios": "^1.7.7",
    "fs": "^0.0.1-security",
    "js-cookie": "^3.0.5",
    "marked": "^15.0.4",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-helmet": "^6.1.0",
    "react-helmet-async": "^2.0.5",
    "react-icons": "^5.2.1",
    "react-multi-carousel": "^2.8.5",
    "react-redux": "^9.1.2",
    "react-router-dom": "^6.25.1",
    "react-scripts": "5.0.1",
    "react-scroll": "^1.9.0",
    "react-share": "^5.1.0",
    "redux": "^5.0.1",
    "swiper": "^11.1.14",
    "web-vitals": "^4.2.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "generate-sitemap": "node sitemap-generator.js",
    "build": "npm run generate-sitemap && react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/parser": "^7.26.3",
    "@babel/traverse": "^7.26.4",
    "@tailwindcss/typography": "^0.5.15"
  },
  "description": "This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).",
  "main": "tailwind.config.js",
  "author": "",
  "license": "ISC"
}
</file>

<file path="public/index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="Digiopt Consulting"
      content="It is the react starter we will use to start or initilize any react project.."
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>Digiopt Consulting</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
</file>

<file path="src/App.js">
import React from 'react';
import { Routes, Route } from 'react-router-dom';
import Navbar from './Components/Navbar';
import Footer from './Components/Footer';
import HomePage from './Pages/Home';
import ContactPage from './Pages/ContactPage';

function App() {
  return (
    <div className="flex flex-col min-h-screen">
      <Navbar />
      <main className="flex-grow">
        <Routes>
          <Route path="/" element={<HomePage />} />
          <Route path="/contact" element={<ContactPage />} />
        </Routes>
      </main>
      <Footer />
    </div>
  );
}

export default App;
</file>

<file path="src/index.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
  
}
@import url('https://fonts.googleapis.com/css2?family=Cairo:wght@200..1000&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
html,
body {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", system-ui;
}

h1, h2, h3, h4, h5, h6,
p, ul, ol, li, blockquote,
pre, hr, address, fieldset, legend,
table, caption, th, td,
form, input, button, textarea, select, label {
  margin: 0;
  padding: 0;
}


img, a {
  padding: 0;
  margin: 0;
  outline: none;
  text-decoration: none;
}
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: #f5f5f5; 
}

::-webkit-scrollbar-thumb {
  background: #00A896; 
  border-radius: 8px;
}

::-webkit-scrollbar-thumb:hover {
  background: #00A896;
}

/* external imports */
.poppins {
  font-family: "Poppins", sans-serif;
}
.cairo{
  font-family: "Cairo", sans-serif;
}


/* custom css */

.sectionlayout{
  max-width: 1640px;
  margin: auto;
  padding: 0 2rem;
}
@media (max-width: 1023px) {
  .sectionlayout{
    padding: 0 1rem;
  }
  
}
@media (max-width: 767px) {
  .sectionlayout{
    padding: 0 1rem;
  }
  
}
</file>

<file path="src/index.js">
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from "react-router-dom";
import { HelmetProvider } from "react-helmet-async";

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <HelmetProvider>
    <BrowserRouter>
        <App />
    </BrowserRouter>
    </HelmetProvider>
  </React.StrictMode>
);
</file>

<file path="src/Pages/Home/Home.jsx">
import React from 'react'

function Home() {
  return (
    <div className='font-bold text-center'>Home</div>
  )
}

export default Home
</file>

<file path="src/Components/Footer.jsx">
import React from 'react';
import { Link } from 'react-router-dom';

const Footer = () => {
  return (
    <footer className="bg-dark text-gray-400">
      <div className="container mx-auto px-6 py-12">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
          {/* About */}
          <div className="col-span-1 md:col-span-2">
            <h3 className="text-xl font-bold text-white mb-4">Kaamlay.com</h3>
            <p className="pr-4">Pakistan’s leading membership-based maintenance company. We provide trusted, high-quality services to ensure your home and office are always in perfect condition.</p>
          </div>
          {/* Quick Links */}
          <div>
            <h3 className="text-lg font-semibold text-white mb-4">Quick Links</h3>
            <ul className="space-y-2">
              <li><Link to="/" className="hover:text-white transition-colors">Home</Link></li>
              <li><Link to="/contact" className="hover:text-white transition-colors">Contact Us</Link></li>
              <li><Link to="#" className="hover:text-white transition-colors">Services</Link></li>
            </ul>
          </div>
          {/* Contact */}
          <div>
            <h3 className="text-lg font-semibold text-white mb-4">Contact Info</h3>
            <ul className="space-y-2">
              <li className="flex items-start">Islamabad, Pakistan</li>
              <li className="flex items-start">0300-1311111</li>
              <li className="flex items-start">Kaamlay.com@gmail.com</li>
            </ul>
          </div>
        </div>
        <hr className="my-8 border-gray-700" />
        <div className="text-center text-sm">
          <p>&copy; {new Date().getFullYear()} Kaamlay.com Pvt. Ltd. All Rights Reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
</file>

<file path="src/Components/Navbar.jsx">
import React from 'react';
import { NavLink, Link } from 'react-router-dom';

const Navbar = () => {
  const activeLinkStyle = 'text-primary font-semibold';
  const inactiveLinkStyle = 'text-dark hover:text-primary transition-colors duration-300';

  return (
    <header className="bg-white/95 backdrop-blur-sm sticky top-0 z-50 shadow-md">
      <nav className="container mx-auto px-6 py-4 flex justify-between items-center">
        <Link to="/" className="text-3xl font-bold text-primary">
          Kaamlay
        </Link>
        <div className="hidden md:flex items-center space-x-8 text-lg">
          <NavLink
            to="/"
            className={({ isActive }) => (isActive ? activeLinkStyle : inactiveLinkStyle)}
          >
            Home
          </NavLink>
          <NavLink
            to="/contact"
            className={({ isActive }) => (isActive ? activeLinkStyle : inactiveLinkStyle)}
          >
            Contact Us
          </NavLink>
        </div>
        <Link 
          to="/contact" 
          className="hidden md:inline-block bg-accent text-dark font-bold py-2 px-6 rounded-lg hover:bg-amber-400 transition-all duration-300 transform hover:scale-105"
        >
          Get a Quote
        </Link>
        {/* Mobile Menu Button can be added here */}
      </nav>
    </header>
  );
};

export default Navbar;
</file>

<file path="src/Pages/ContactPage.jsx">
import React, { useState } from 'react';

const serviceOptions = [
  "Electrical Works", "Plumbing Works", "AC & Refrigerator Services",
  "Carpenter Works", "Car Wash (Home Service)", "General Inquiry"
];

const ContactPage = () => {
  const [formData, setFormData] = useState({
    fullName: '', email: '', phone: '', serviceType: serviceOptions[0], message: ''
  });
  const [status, setStatus] = useState({ submitting: false, message: '', error: false });

  const handleChange = (e) => setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus({ submitting: true, message: '', error: false });

    const PHP_MAILER_URL = 'http://your-domain.com/path/to/your/contact.php';
    const postData = new FormData();
    Object.keys(formData).forEach(key => postData.append(key, formData[key]));
    
    try {
      const response = await fetch(PHP_MAILER_URL, { method: 'POST', body: postData });
      const result = await response.json();
      if (result.status === 'success') {
        setStatus({ submitting: false, message: result.message, error: false });
        setFormData({ fullName: '', email: '', phone: '', serviceType: serviceOptions[0], message: '' });
      } else {
        setStatus({ submitting: false, message: result.message || 'An error occurred.', error: true });
      }
    } catch (error) {
      setStatus({ submitting: false, message: 'An unexpected error occurred. Please try again.', error: true });
    }
  };

  return (
    <div className="bg-light py-20">
      <div className="container mx-auto px-6">
        <div className="text-center mb-16">
          <h1 className="text-4xl md:text-5xl font-extrabold text-dark">We're Ready to Help</h1>
          <p className="text-lg text-gray-600 mt-4 max-w-2xl mx-auto">
            Your comfort and satisfaction are our top priorities. Let us know how we can assist you.
          </p>
        </div>

        <div className="max-w-4xl mx-auto bg-white rounded-2xl shadow-2xl overflow-hidden md:flex">
          <div className="md:w-1/3 bg-primary text-white p-8 space-y-6">
            <h2 className="font-bold text-2xl">Contact Information</h2>
            <p>Fill out the form and our team will get back to you within 24 hours.</p>
            <div className="space-y-4">
              <p className="flex items-center"><svg className="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" /></svg> 0300-1311111</p>
              <p className="flex items-center"><svg className="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" /></svg> Kaamlay.com@gmail.com</p>
            </div>
          </div>

          <div className="p-8 md:w-2/3">
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="fullName" className="block text-sm font-medium text-gray-700">Full Name</label>
                  <input type="text" name="fullName" value={formData.fullName} onChange={handleChange} required className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary"/>
                </div>
                <div>
                  <label htmlFor="email" className="block text-sm font-medium text-gray-700">Email Address</label>
                  <input type="email" name="email" value={formData.email} onChange={handleChange} required className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary"/>
                </div>
              </div>
              <div>
                <label htmlFor="serviceType" className="block text-sm font-medium text-gray-700">Service Type</label>
                <select name="serviceType" value={formData.serviceType} onChange={handleChange} className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary">
                  {serviceOptions.map(opt => <option key={opt}>{opt}</option>)}
                </select>
              </div>
              <div>
                <label htmlFor="message" className="block text-sm font-medium text-gray-700">How can we help?</label>
                <textarea name="message" rows="4" value={formData.message} onChange={handleChange} required className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary"></textarea>
              </div>
              <div>
                <button type="submit" disabled={status.submitting} className="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-lg font-bold text-white bg-primary hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:bg-gray-400 transition-all">
                  {status.submitting ? 'Sending...' : 'Submit Request'}
                </button>
              </div>
            </form>
            {status.message && <p className={`mt-4 text-center font-medium ${status.error ? 'text-red-600' : 'text-green-600'}`}>{status.message}</p>}
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContactPage;
</file>

<file path="src/Pages/Home.jsx">
import React from 'react';
import { Link } from 'react-router-dom';

// Heroicons - a professional icon set from the makers of Tailwind CSS
const ServiceIcon = ({ d }) => <svg className="w-12 h-12 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d={d}></path></svg>;

const services = [
  { icon: <ServiceIcon d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />, title: "Electrical Works" },
  { icon: <ServiceIcon d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />, title: "Plumbing Works" },
  { icon: <ServiceIcon d="M5 13l4 4L19 7" />, title: "AC & Refrigerator" },
  { icon: <ServiceIcon d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />, title: "Carpenter Works" },
  { icon: <ServiceIcon d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />, title: "Car Wash (Home)" },
  { icon: <ServiceIcon d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3" />, title: "Free General Check-Up" },
];

const Feature = ({ icon, title, children }) => (
  <div className="text-center">
    <div className="flex items-center justify-center h-16 w-16 rounded-full bg-secondary/20 mx-auto mb-4">
      {icon}
    </div>
    <h3 className="text-xl font-bold text-dark mb-2">{title}</h3>
    <p className="text-gray-600">{children}</p>
  </div>
);

const HomePage = () => {
  return (
    <div className="bg-light">
      {/* Hero Section */}
      <section className="bg-white">
        <div className="container mx-auto px-6 py-20 grid md:grid-cols-2 gap-10 items-center">
          <div className="text-center md:text-left">
            <h1 className="text-4xl md:text-6xl font-extrabold text-dark leading-tight mb-4">
              Reliable Home & Office Maintenance, Simplified.
            </h1>
            <p className="text-lg text-gray-600 max-w-lg mx-auto md:mx-0 mb-8">
              From electricians to plumbers, get trained, verified, and reliable professionals at your doorstep. Join the Kaamlay family for peace of mind.
            </p>
            <Link to="/contact" className="bg-primary text-white font-bold py-4 px-10 rounded-lg text-lg hover:bg-teal-700 transition-all duration-300 transform hover:scale-105 inline-block">
              Schedule a Service Today
            </Link>
          </div>
          <div>
            {/* IMPORTANT: Replace this placeholder with a real image */}
            <img src="https://via.placeholder.com/600x400.png/0D9488/FFFFFF?text=Kaamlay+Professionals" alt="Professional Maintenance Services" className="rounded-lg shadow-2xl"/>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-light">
          <div className="container mx-auto px-6 grid md:grid-cols-3 gap-12">
            <Feature icon={<ServiceIcon d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />} title="Verified Professionals">
              Every technician is background-checked, trained, and committed to quality service.
            </Feature>
            <Feature icon={<ServiceIcon d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />} title="On-Time & Convenient">
              We value your time. Schedule services at your convenience and expect us to be punctual.
            </Feature>
            <Feature icon={<ServiceIcon d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l-3 3m6 0l-3-3m-3 18l3-3m-6 0l3 3" />} title="Transparent Pricing">
              No hidden fees. Enjoy clear, upfront pricing with our flexible membership plans.
            </Feature>
          </div>
      </section>

      {/* Services Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-extrabold text-dark">What We Do Best</h2>
            <p className="mt-4 text-lg text-gray-600">A complete range of maintenance solutions under one roof.</p>
          </div>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {services.map((service) => (
              <div key={service.title} className="bg-light p-8 rounded-xl border border-transparent hover:border-secondary hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2">
                {service.icon}
                <h3 className="text-2xl font-bold text-dark mt-4 mb-2">{service.title}</h3>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default HomePage;
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        'primary': '#0D9488',   // A rich, modern teal
        'secondary': '#2dd4bf', // A lighter, vibrant teal for accents
        'accent': '#FBBF24',   // A warm amber/gold for buttons and highlights
        'dark': '#1F2937',     // A deep charcoal for text
        'light': '#F9FAFB',     // A very light gray for backgrounds
      },
      fontFamily: {
        // You can add a custom font here if you like, e.g., 'Poppins', sans-serif
        'sans': ['Inter', 'ui-sans-serif', 'system-ui'],
      }
    },
  },
  plugins: [
    require('@tailwindcss/forms'),
  ],
}
</file>

<file path=".github/workflows/deploy.yml">
name: 🚀 Deploy website on push

on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: 🎉 Deploy static files
    runs-on: ubuntu-latest

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v2

      - name: 📂 Upload files to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /public_html/api/
          protocol: ftps
          port: 21


# name: 🚀 Deploy website on push
# on: 
#   push:
#     branches:
#       - main
# jobs:
#   web-deploy:
#     name: 🎉 Deploy
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🚚 Get latest code
#         uses: actions/checkout@v2
      
#       - name: 🔧 Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '18'
      
#       - name: 📦 Install dependencies
#         run: npm ci
      
#       - name: 🏗️ Build project
#         run: npm run build
      
#       - name: 📂 Sync build files
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.0-beta
#         with:
#           server: ${{ secrets.FTP_SERVER }}
#           username: ${{ secrets.FTP_USERNAME }}
#           password: ${{ secrets.FTP_PASSWORD }}
#           local-dir: ./dist/
#           server-dir: /api
#           protocol: ftps
#           port: 21
</file>

</files>
